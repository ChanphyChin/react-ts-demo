{"version":3,"sources":["index.less","services/index.ts","reportWebVitals.ts","components/public-header/index.tsx","views/home/index.tsx","routes/config.ts","views/login/index.less","views/login/index.tsx","views/page-not-found/index.tsx","views/home/dasheboard/index.tsx","views/user-center/index.tsx","index.tsx"],"names":["api","request","config","method","apiRoot","apiPath","params","customHeaders","clone","path","req","forIn","value","key","isArray","join","query","console","log","send","set","get","Promise","resolve","post","put","delete","errorHandle","error","status","reject","forEach","data","Object","assign","then","response","body","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Header","Layout","PublicHeader","props","history","useHistory","menu","onClick","res","sessionStorage","removeItem","push","handleMenuClick","Item","style","textAlign","overlay","placement","UserOutlined","fontSize","color","Sider","Content","baseRoutesConfig","name","component","tailLayout","wrapperCol","offset","span","labelCol","initialValues","remember","onFinish","values","setItem","JSON","stringify","onFinishFailed","errorInfo","className","label","rules","required","message","Password","valuePropName","type","htmlType","routesConfig","useState","collapsed","useEffect","homeRoutes","find","item","homeChildrenRoutes","children","height","trigger","collapsible","theme","mode","defaultSelectedKeys","icon","VideoCameraOutlined","UploadOutlined","margin","padding","minHeight","map","from","to","auth","ReactDOM","render","StrictMode","route","document","getElementById"],"mappings":"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","file":"static/js/main.19841f52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/index.f734ad14.less\";","import request from 'superagent';\nimport { clone, forIn, isArray } from 'lodash';\n\nexport const METHOD_GET: string = 'get';\nexport const METHOD_POST: string = 'post';\nexport const METHOD_PUT: string = 'put';\nexport const METHOD_DELETE: string = 'delete';\n\nconst DEFAULT_METHOD: string = METHOD_GET;\nconst statusCode = {\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    FORBIDDEN: 403,\n    NOT_FOUND: 404,\n    METHOD_NOT_ALLOWED: 405,\n    REQUEST_TIMEOUT: 408,\n    CONFLICT: 409,\n    REQUEST_ENTITY_TOO_LARGE: 413,\n    REQUEST_URI_TOO_LONG_URI: 414,\n    UNSUPPORTED_MEDIA_TYPE: 415,\n    LOCKED: 423,\n    TOO_MANY_REQUEST: 429,\n};\n\n\ninterface Config {\n    method?: 'get'|'post'|'put'|'delete';\n    apiRoot: string;\n    apiPath: string;\n    params?: {\n        [key:string]: any;\n    };\n    customHeaders?: {\n        [key:string]: any;\n    };\n}\n\ninterface Api {\n    request: (config: Config) => Promise<any>;\n    get: (config: Config) => Promise<any>;\n    post: (config: Config) => Promise<any>;\n    put: (config: Config) => Promise<any>;\n    delete: (config: Config) => Promise<any>;\n}\n\nexport const api: Api = {\n    /**\n     * 发送请求\n     * @param {object} config - 请求对象\n     */\n    request(config: Config) {\n        let {\n            method = DEFAULT_METHOD,\n            apiRoot,\n            apiPath,\n            params = {},\n            customHeaders,\n        } = config;\n        params = clone(params);\n        const path = apiRoot + apiPath;\n        // @ts-ignore\n        let req = request[method](path);\n        if (params) {\n            switch (method) {\n                case METHOD_GET:\n                    forIn(params, (value, key) => {\n                        if (isArray(value)) {\n                            params[key] = value.join(',');\n                        }\n                    });\n                    req = req.query(params);\n                    break;\n                case METHOD_DELETE:\n                    break;\n                default:\n                    console.log(params);\n                    req = req.send(params);\n                    break;\n            }\n        }\n\n        // 设置请求头\n        customHeaders && req.set(customHeaders);\n\n        return req;\n    },\n    get: (config: Config) => Promise.resolve(),\n    post: (config: Config) => Promise.resolve(),\n    put: (config: Config) => Promise.resolve(),\n    delete: (config: Config) => Promise.resolve(),\n};\n\n['get', 'post', 'put', 'patch', 'delete'].forEach(function(method: string) {\n    // WARN: 该方法内使用了指向 api 的 this, 因此不可使用箭头函数；\n     // @ts-ignore\n    api[method] = function(data: Config, config: Config) {\n        let { apiRoot, apiPath, params } = data;\n\n        config = Object.assign({}, config, {\n            method,\n            apiRoot,\n            apiPath,\n            params,\n        });\n        return api\n            .request(config)\n            .then((response: any) => {\n                console.log(response);\n                return response.body;\n            })\n            .catch(errorHandle);\n    };\n});\n\n\n/**\n * 请求失败处理\n * @param {object} error 请求信息\n * @returns {Promise}\n */\n function errorHandle(error: { status: number; }) {\n     if(error.status === 401) {\n         \n     }\n    return Promise.reject(error);\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Layout, Dropdown, Menu } from 'antd';\nimport {\n    UserOutlined,\n} from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport { api } from '../../services';\n\nconst { Header } = Layout;\n\ninterface PublicHeaderProp {\n  onClick?: (key: string) => void;\n}\n\nexport const PublicHeader = (props: PublicHeaderProp) => {\n  const history = useHistory();\n  const handleMenuClick = (key: string) => {\n    const { onClick } = props;\n    onClick && onClick(key);\n    if(key === '/login') {\n      api.post({\n        apiRoot: 'http://192.168.0.11:4000',\n        apiPath: '/logout',\n      }).then(res => {\n          sessionStorage.removeItem('token');\n          history.push('/login');\n      })\n    }else {\n      history.push(key);\n    }\n  }\n  const menu = (\n    <Menu onClick={({ key }) => handleMenuClick(key as string)}>\n      <Menu.Item key=\"/userCenter\">\n          User Center\n      </Menu.Item>\n      <Menu.Item key=\"/login\">\n          logout\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Header style={{ textAlign: 'right' }}>\n        <Dropdown overlay={menu} placement=\"bottomCenter\">\n            <UserOutlined style={{ fontSize: 30, color: '#fff' }}/>\n        </Dropdown>\n    </Header>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Layout, Menu, Dropdown } from 'antd';\nimport {\n    UserOutlined,\n    VideoCameraOutlined,\n    UploadOutlined,\n} from '@ant-design/icons';\nimport {\n    Switch,\n    Route,\n    Redirect,\n    useHistory\n} from \"react-router-dom\";\nimport { routesConfig } from '../../routes';\nimport { IRoute } from '../../types';\nimport { PublicHeader } from '../../components';\nimport { api } from '../../services';\n\nconst { Sider, Content } = Layout;\n\nexport const Home = () => {\n    const [ collapsed, setCollapsed ] = useState(false);\n    const history = useHistory();\n    useEffect(() => {\n        api.get({\n            apiRoot: 'http://192.168.0.11:4000',\n            apiPath: '/home',\n        })\n    })\n    const toggle = () => {\n        setCollapsed(!collapsed);\n    };\n    const handleMenuClick = () => {\n        \n    }\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n        <Menu.Item key=\"3\">\n            logout\n        </Menu.Item>\n        </Menu>\n    );\n    const homeRoutes = routesConfig.find(item => item.name === 'home');\n    const homeChildrenRoutes: Array<IRoute> | undefined = homeRoutes && homeRoutes.children;\n    return (\n        <Layout style={{ height: '100%' }}>\n            <PublicHeader />\n            <Content>\n                <Layout style={{ height: '100%' }}>\n                    <Sider trigger={null} collapsible collapsed={collapsed}>\n                        <div className=\"logo\" />\n                        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                            nav 1\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n                            nav 2\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n                            nav 3\n                        </Menu.Item>\n                        </Menu>\n                    </Sider>\n                <Layout className=\"site-layout\">\n                    <Content\n                    className=\"site-layout-background\"\n                    style={{\n                        margin: '24px 16px',\n                        padding: 24,\n                        minHeight: 280,\n                    }}\n                    >\n                        <Switch>\n                            {\n                                homeChildrenRoutes && homeChildrenRoutes.map(item => {\n                                    return <Route key={item.path} path={item.path} component={item.component}/>\n                                })\n                            }\n                            <Redirect from=\"*\" to=\"/home/dasheboard\" /> \n                        </Switch>\n                    </Content>\n                </Layout>\n                </Layout>\n            </Content>\n        </Layout>\n    );\n}\n\nexport { Dasheboard } from './dasheboard';","import { IRoute } from '../types';\nimport {\n    Login,\n    Home,\n    PageNotFound,\n    Dasheboard,\n    UserCenter\n} from '../views';\nexport const baseRoutesConfig: Array<IRoute> = [\n    {\n        path: '/login',\n        name: 'login',\n        component: Login\n    },\n    {\n        path: '/404',\n        name: 'pageNotFound',\n        component: PageNotFound\n    },\n];\nexport const routesConfig: Array<IRoute> = [\n    {\n        path: '/home',\n        name: 'home',\n        component: Home,\n        auth: true,\n        children: [\n            {\n                path: '/home/dasheboard',\n                name: 'dasheboard',\n                component: Dasheboard,\n                auth: true,\n            }\n        ]\n    },\n    {\n        path: '/userCenter',\n        name: 'userCenter',\n        component: UserCenter,\n        auth: true,\n    },\n];","export default __webpack_public_path__ + \"static/media/index.48a6aa4d.less\";","import { Form, Input, Button, Checkbox } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { api } from '../../services';\nimport './index.less';\n\nexport const Login = () => {\n    const history = useHistory();\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n    const onFinish = (values: any) => {\n        api.post({\n            apiRoot: 'http://192.168.0.11:4000',\n            apiPath: '/login',\n            params: values\n        }).then(res => {\n            console.log(res, 'res');\n        })\n        sessionStorage.setItem('token', JSON.stringify(values));\n        history.push('/home');\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n    return (\n        <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            className='login'\n        >\n            <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n            <Input />\n            </Form.Item>\n    \n            <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n            <Input.Password />\n            </Form.Item>\n    \n            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n    \n            <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Login\n            </Button>\n            </Form.Item>\n        </Form>\n    );\n}","import { useHistory } from 'react-router-dom';\nimport { Button } from 'antd';\n\nexport const PageNotFound = () => {\n    const history = useHistory();\n    const backToHome = () => {\n        history.push('/home');\n    }\n    return(\n        <div>\n            page not found\n            <div>\n                <Button onClick={backToHome}>back to home</Button>\n            </div>\n        </div>\n    );\n}","export const Dasheboard = () => {\n  return (\n    <div>\n      Dasheboard\n    </div>\n  );\n}\n","export const UserCenter = () => {\n  return (\n    <div>\n      UserCenter\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport './index.less';\nimport './services';\nimport reportWebVitals from './reportWebVitals';\nimport { ProvideAuth, baseRoutesConfig, routesConfig } from './routes';\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n          {baseRoutesConfig.map(route => {\n            return <Route key={route.path} path={route.path} component={route.component} />\n          })}\n          {routesConfig.map(route => {\n            return <Route key={route.path} path={route.path} component={route.component} />\n          })}\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}