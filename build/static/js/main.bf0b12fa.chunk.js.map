{"version":3,"sources":["services/index.ts","reportWebVitals.ts","components/public-header/index.tsx","views/home/dasheboard/index.tsx","views/home/redux/index.tsx","views/home/index.tsx","routes/config.ts","views/login/index.tsx","views/page-not-found/index.tsx","views/user-center/index.tsx","index.tsx"],"names":["api","request","config","method","apiRoot","apiPath","params","customHeaders","clone","path","req","forIn","value","key","isArray","join","query","console","log","send","set","get","Promise","resolve","post","put","delete","errorHandle","error","status","window","location","href","reject","forEach","data","Object","assign","then","response","body","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Header","PublicHeader","props","history","useHistory","menu","onClick","res","sessionStorage","removeItem","push","handleMenuClick","Item","style","textAlign","overlay","placement","UserOutlined","fontSize","color","Dasheboard","state","dataSource","pagination","page","current","pageSize","total","onChange","getDataSource","setState","preState","result","onPageChange","this","cloneDeep","type","columns","title","dataIndex","marginTop","Component","Redux","Sider","Content","baseRoutesConfig","name","component","tailLayout","wrapperCol","offset","span","labelCol","initialValues","remember","onFinish","values","setItem","JSON","stringify","onFinishFailed","errorInfo","className","label","rules","required","message","Password","valuePropName","htmlType","routesConfig","useState","routes","setRoutes","useLocation","useEffect","selectedKeys","useMemo","pathname","homeRoutes","find","item","homeChildrenRoutes","children","getRoutes","useCallback","reduce","child","height","trigger","collapsible","theme","mode","onSelect","onMenuChange","icon","VideoCameraOutlined","margin","padding","minHeight","length","map","from","to","auth","username","user","setUser","bordered","width","ReactDOM","render","StrictMode","route","document","getElementById"],"mappings":"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","file":"static/js/main.bf0b12fa.chunk.js","sourcesContent":["import request from 'superagent';\nimport { clone, forIn, isArray } from 'lodash';\n\nexport const METHOD_GET: string = 'get';\nexport const METHOD_POST: string = 'post';\nexport const METHOD_PUT: string = 'put';\nexport const METHOD_DELETE: string = 'delete';\n\nconst DEFAULT_METHOD: string = METHOD_GET;\n\ninterface Config {\n    method?: 'get'|'post'|'put'|'delete';\n    apiRoot: string;\n    apiPath: string;\n    params?: {\n        [key:string]: any;\n    };\n    customHeaders?: {\n        [key:string]: any;\n    };\n}\n\ninterface Api {\n    request: (config: Config) => Promise<any>;\n    get: (config: Config) => Promise<any>;\n    post: (config: Config) => Promise<any>;\n    put: (config: Config) => Promise<any>;\n    delete: (config: Config) => Promise<any>;\n}\n\nexport const api: Api = {\n    /**\n     * 发送请求\n     * @param {object} config - 请求对象\n     */\n    request(config: Config) {\n        let {\n            method = DEFAULT_METHOD,\n            apiRoot,\n            apiPath,\n            params = {},\n            customHeaders,\n        } = config;\n        params = clone(params);\n        const path = apiRoot + apiPath;\n        // @ts-ignore\n        let req = request[method](path);\n        if (params) {\n            switch (method) {\n                case METHOD_GET:\n                    forIn(params, (value, key) => {\n                        if (isArray(value)) {\n                            params[key] = value.join(',');\n                        }\n                    });\n                    req = req.query(params);\n                    break;\n                case METHOD_DELETE:\n                    break;\n                default:\n                    console.log(params);\n                    req = req.send(params);\n                    break;\n            }\n        }\n\n        // 设置请求头\n        customHeaders && req.set(customHeaders);\n\n        return req;\n    },\n    get: (config: Config) => Promise.resolve(),\n    post: (config: Config) => Promise.resolve(),\n    put: (config: Config) => Promise.resolve(),\n    delete: (config: Config) => Promise.resolve(),\n};\n\n['get', 'post', 'put', 'patch', 'delete'].forEach(function(method: string) {\n    // WARN: 该方法内使用了指向 api 的 this, 因此不可使用箭头函数；\n     // @ts-ignore\n    api[method] = function(data: Config, config: Config) {\n        let { apiRoot, apiPath, params } = data;\n\n        config = Object.assign({}, config, {\n            method,\n            apiRoot,\n            apiPath,\n            params,\n        });\n        return api\n            .request(config)\n            .then((response: any) => {\n                console.log(response);\n                return response.body;\n            })\n            .catch(errorHandle);\n    };\n});\n\n\n/**\n * 请求失败处理\n * @param {object} error 请求信息\n * @returns {Promise}\n */\n function errorHandle(error: { status: number; }) {\n     if(error.status === 401) {\n         window.location.href = '/#/login';\n     }\n    return Promise.reject(error);\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Layout, Dropdown, Menu } from 'antd';\nimport {\n    UserOutlined,\n} from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\nimport { api } from '../../services';\n\nconst { Header } = Layout;\n\ninterface PublicHeaderProp {\n  onClick?: (key: string) => void;\n}\n\nexport const PublicHeader = (props: PublicHeaderProp) => {\n  const history = useHistory();\n  const handleMenuClick = (key: string) => {\n    const { onClick } = props;\n    onClick && onClick(key);\n    console.log(key);\n    if(key === '/login') {\n      api.post({\n        apiRoot: 'http://192.168.0.11:4000',\n        apiPath: '/logout',\n      }).then(res => {\n          sessionStorage.removeItem('token');\n          history.push('/login');\n      })\n    }else {\n      history.push(key);\n    }\n  }\n  const menu = (\n    <Menu onClick={({ key }) => handleMenuClick(key as string)}>\n      <Menu.Item key=\"/home\">\n          Home\n      </Menu.Item>\n      <Menu.Item key=\"/userCenter\">\n          User Center\n      </Menu.Item>\n      <Menu.Item key=\"/login\">\n          logout\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Header style={{ textAlign: 'right' }}>\n        <Dropdown overlay={menu} placement=\"bottomCenter\">\n            <UserOutlined style={{ fontSize: 30, color: '#fff' }}/>\n        </Dropdown>\n    </Header>\n  );\n}\n","import { Component } from 'react';\nimport { Table, Button } from 'antd';\nimport { cloneDeep } from 'lodash';\nimport { api } from '../../../services';\n\ninterface DasheboardState {\n  dataSource: any[];\n  pagination: {\n    page: number;\n    current: number;\n    pageSize: number;\n    total: number;\n    onChange: (page: number) => void;\n  }\n}\n\nexport class Dasheboard extends Component<any, DasheboardState> {\n  state: DasheboardState = {\n    dataSource: [],\n    pagination: {\n      page: 1,\n      current: 1,\n      pageSize: 10,\n      total: 1,\n      onChange: (page: number) => {}\n    }\n  }\n  getDataSource = (page: number) => {\n    api.get({\n      apiRoot: 'http://192.168.0.11:4000',\n      apiPath: '/dasheboard_table',\n      params: {\n        page,\n        pageSize: 10\n      }\n    }).then(res => {\n      this.setState((preState)=> {\n        return { dataSource: res.result, pagination: {...preState.pagination, page: res.page, current: res.page, pageSize: res.pageSize, total: res.total } }\n      })\n    })\n  }\n  onPageChange = (page: number) => {\n    this.getDataSource(page);\n  }\n  render() {\n    let { dataSource, pagination } = this.state;\n\n    const columns = [\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name',\n      },\n      {\n        title: '年龄',\n        dataIndex: 'age',\n        key: 'age',\n      },\n      {\n        title: '住址',\n        dataIndex: 'address',\n        key: 'address',\n      },\n    ];\n\n    pagination = cloneDeep(pagination);\n    pagination.onChange = this.onPageChange;\n    return (\n      <div>\n        <Button type='primary' onClick={() => this.getDataSource(1)}>获取数据</Button>\n        <Table dataSource={dataSource} columns={columns} style={{marginTop: 30}} pagination={pagination}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport function Redux() {\n  return (\n    <div>\n      Redux\n    </div>\n  );\n}\n\nexport default Redux;\n","import { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Layout, Menu, Button } from 'antd';\nimport {\n    UserOutlined,\n    VideoCameraOutlined,\n} from '@ant-design/icons';\nimport {\n    Switch,\n    Route,\n    Redirect,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\nimport { routesConfig } from '../../routes';\nimport { IRoute } from '../../types';\nimport { PublicHeader } from '../../components';\nimport { api } from '../../services';\n\nconst { Sider, Content } = Layout;\n\nexport const Home = () => {\n    const [ routes, setRoutes ] = useState([]);\n    const history = useHistory();\n    const location = useLocation();\n\n    useEffect(() => {\n        api.get({\n            apiRoot: 'http://192.168.0.11:4000',\n            apiPath: '/home_routes',\n        }).then(res => {\n            setRoutes(res);\n        });\n    }, [])\n\n    const selectedKeys = useMemo(() => {\n        return [location.pathname];\n    }, [location.pathname]);\n\n    const homeRoutes = routesConfig.find(item => item.name === 'home');\n    const homeChildrenRoutes: Array<IRoute> | undefined = useMemo(() => {\n        return (homeRoutes && homeRoutes.children) || [];\n    }, [homeRoutes]);\n\n    const getRoutes = useCallback(() => {\n        const currentRoutes = routes.reduce((result: IRoute[], path: string) => {\n            for(let child of homeChildrenRoutes) {\n                if(child.path === path) {\n                    result.push(child);\n                }\n            }\n            return result;\n        }, []);\n        return currentRoutes;\n    }, [routes, homeChildrenRoutes]);\n\n    const onMenuChange = (key: string) => {\n        history.push(key);\n    }\n    \n    return (\n        <Layout style={{ height: '100%' }}>\n            <PublicHeader />\n            <Content>\n                <Layout style={{ height: '100%' }}>\n                    <Sider trigger={null} collapsible>\n                        <div className=\"logo\" />\n                        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selectedKeys} onSelect={({ key }) => onMenuChange(key as string)}>\n                            <Menu.Item key=\"/home/dasheboard\" icon={<UserOutlined />}>\n                                dasheboard\n                            </Menu.Item>\n                            <Menu.Item key=\"/home/redux\" icon={<VideoCameraOutlined />}>\n                                redux\n                            </Menu.Item>\n                        </Menu>\n                    </Sider>\n                <Layout className=\"site-layout\">\n                    <Content\n                    className=\"site-layout-background\"\n                    style={{\n                        margin: '24px 16px',\n                        padding: 24,\n                        minHeight: 280,\n                    }}\n                    >\n                        {!routes.length && <Button>获取子路由</Button>}\n                        <Switch>\n                            {\n                                getRoutes().map(item => {\n                                    return <Route key={item.path} path={item.path} component={item.component}/>\n                                })\n                            }\n                            <Redirect from=\"*\" to=\"/home/dasheboard\" /> \n                        </Switch>\n                    </Content>\n                </Layout>\n                </Layout>\n            </Content>\n        </Layout>\n    );\n}\n\nexport { Dasheboard } from './dasheboard';\nexport { Redux } from './redux';","import { IRoute } from '../types';\nimport {\n    Login,\n    Home,\n    PageNotFound,\n    Dasheboard,\n    UserCenter,\n    Redux\n} from '../views';\nexport const baseRoutesConfig: Array<IRoute> = [\n    {\n        path: '/login',\n        name: 'login',\n        component: Login\n    },\n    {\n        path: '/404',\n        name: 'pageNotFound',\n        component: PageNotFound\n    },\n];\nexport const routesConfig: Array<IRoute> = [\n    {\n        path: '/home',\n        name: 'home',\n        component: Home,\n        auth: true,\n        children: [\n            {\n                path: '/home/dasheboard',\n                name: 'dasheboard',\n                component: Dasheboard,\n                auth: true,\n            },\n            {\n                path: '/home/redux',\n                name: 'redux',\n                component: Redux,\n                auth: true,\n            },\n        ]\n    },\n    {\n        path: '/userCenter',\n        name: 'userCenter',\n        component: UserCenter,\n        auth: true,\n    },\n];","import { Form, Input, Button, Checkbox } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { api } from '../../services';\nimport './index.less';\n\nexport const Login = () => {\n    const history = useHistory();\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n    const onFinish = (values: any) => {\n        api.post({\n            apiRoot: 'http://192.168.0.11:4000',\n            apiPath: '/login',\n            params: values\n        }).then(res => {\n            console.log(res, 'res');\n        })\n        sessionStorage.setItem('token', JSON.stringify(values));\n        history.push('/home');\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n    return (\n        <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            className='login'\n        >\n            <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[{ required: true, message: 'Please input your username!' }]}\n            >\n            <Input />\n            </Form.Item>\n    \n            <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n            <Input.Password />\n            </Form.Item>\n    \n            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n    \n            <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Login\n            </Button>\n            </Form.Item>\n        </Form>\n    );\n}","import { useHistory } from 'react-router-dom';\nimport { Button } from 'antd';\n\nexport const PageNotFound = () => {\n    const history = useHistory();\n    const backToHome = () => {\n        history.push('/home');\n    }\n    return(\n        <div>\n            page not found\n            <div>\n                <Button onClick={backToHome}>back to home</Button>\n            </div>\n        </div>\n    );\n}","import { useEffect, useState } from 'react';\nimport { Card } from 'antd';\nimport { PublicHeader } from '../../components';\nimport { api } from '../../services';\n\nexport const UserCenter = () => {\n  const [user, setUser] = useState({username: ''});\n  useEffect(() => {\n    api.get({\n      apiRoot: 'http://192.168.0.11:4000',\n      apiPath: '/user_info',\n    }).then(res => {\n      setUser(res);\n    })\n  }, []);\n  return (\n    <div>\n      <PublicHeader />\n      <Card title=\"User Info\" bordered={false} style={{ width: 300 }}>\n        <p>user: {user.username}</p>\n      </Card>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport './index.less';\nimport './services';\nimport reportWebVitals from './reportWebVitals';\nimport { baseRoutesConfig, routesConfig } from './routes';\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n          {baseRoutesConfig.map(route => {\n            return <Route key={route.path} path={route.path} component={route.component} />\n          })}\n          {routesConfig.map(route => {\n            return <Route key={route.path} path={route.path} component={route.component} />\n          })}\n          <Redirect from='*' to='/home' />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}